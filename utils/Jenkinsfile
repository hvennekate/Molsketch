pipeline {
  agent any
  // TODO determine version and check it does not yet exist
  // TODO push tag to github

  stages {
    stage('Clean') {
      steps {
        cleanWs()
        dir('sources') {
          git branch: 'main', credentialsId: 'github', url: 'git@github.com:hvennekate/Molsketch.git'
        }
      }
    }
    stage('Version') {
      steps {
        dir('sources') {
          script {
            env.msk_version = readFile 'version'
            env.msk_version -= '\n'
            env.msk_version_nick = readFile 'versionnick'
            env.msk_version_nick -= '\n'
          }
          echo "Build version:  ${env.msk_version_nick} ${env.msk_version}"
        }
      }
    }
    stage('CMake') {
      steps {
       dir('cmake-build') {
         sh 'cmake ../sources/'
         sh 'make -j 8'
        }
      }
    }
    stage('Test') {
      steps {
        build 'Molsketch/tests'
      }
    }
    stage('Package') {
      steps {
        dir('sources') {
          sh 'git archive HEAD --prefix=Molsketch-${msk_version}/ -o Molsketch-${msk_version}-src.tar.gz'
        }
      }
      post {
        success {
          archiveArtifacts artifacts: "sources/Molsketch-${env.msk_version}-src.tar.gz", followSymlinks: false
        }
      }
    }
    stage('Sourceforge') {
        //     // select default https://sourceforge.net/p/forge/documentation/Using%20the%20Release%20API/
      steps {
        unarchive mapping: ["sources/Molsketch-${env.msk_version}-src.tar.gz": "Molsketch-${env.msk_version}-src.tar.gz"]
        withCredentials([sshUserPrivateKey(credentialsId: 'sourceforge_ssh', keyFileVariable: 'sourceForgeKey', passphraseVariable: '', usernameVariable: 'sourceForgeUser')]) {
          sshPut remote: [allowAnyHosts: true, name: 'SourceForge', host: 'frs.sourceforge.net', identityFile: sourceForgeKey, user: sourceForgeUser], from: "sources/Molsketch-${env.msk_version}-src.tar.gz", into: '/home/frs/project/molsketch/Molsketch/'
        }
        withCredentials([string(credentialsId: 'sourceforge_api_key', variable: "apiKey")]) {
          httpRequest acceptType: 'APPLICATION_JSON', customHeaders: [[maskValue: false, name: 'Content-Type', value: 'application/x-www-form-urlencoded']], httpMode: 'PUT', consoleLogResponseBody: true, requestBody: "default=linux&default=mac&default=bsd&default=solaris&default=others&api_key=${apiKey}", responseHandle: 'NONE', url: "https://sourceforge.net/projects/molsketch/files/Molsketch/Molsketch-${env.msk_version}-src.tar.gz", wrapAsMultipart: true
        }
      }
    }
    stage('Homepage') {
      input {
        message 'Blog post'
        ok 'Post'
        parameters {
          string(description: 'Title', name: 'title')
          text(description: 'Blogpost to be published on the Molsketch project page', name: 'blogpost')
        }
      }
      steps {
        // Add blog post https://anypoint.mulesoft.com/apiplatform/sourceforge/#/portals/organizations/98f11a03-7ec0-4a34-b001-c1ca0e0c45b1/apis/32951/versions/34322
        withCredentials([string(credentialsId: 'sourceforge_bearer', variable: 'bearerToken')]) {
          httpRequest acceptType: 'APPLICATION_JSON', customHeaders: [[maskValue: false, name: 'Content-Type', value: 'application/x-www-form-urlencoded'], [maskValue: true, name: 'Authorization', value: 'Bearer ' + bearerToken]], httpMode: 'POST', consoleLogResponseBody: true, requestBody: "labels=release,${env.msk_version}&state=published&text=${java.net.URLEncoder.encode(blogpost, 'UTF-8')}&title=${title}", responseHandle: 'NONE', url: 'https://sourceforge.net/rest/p/molsketch/news', wrapAsMultipart: false
          script {
            def response = httpRequest(acceptType: 'APPLICATION_JSON', customHeaders: [[maskValue: true, name: 'Authorization', value: 'Bearer ' + bearerToken ]], httpMode: 'GET', url: 'https://sourceforge.net/rest/p/molsketch/news')
            def responseObject = readJSON text: response.content
            env.blogUrl = responseObject.posts[0].url.replaceFirst("/rest", "")
          }
        }
        echo "Blog published: ${env.blogUrl}"
        dir('homepage') {
          sh 'wget -O index.html https://molsketch.sourceforge.io'
          sh 'xsltproc --stringparam mskversion "${msk_version}" --stringparam mskversionnick "${msk_version_nick}" --stringparam date "$(date --iso-8601)" --stringparam blogpostUrl "${blogUrl}" --output index-new.html --html ../sources/utils/homepage-update.xsl index.html'
        }
        withCredentials([sshUserPrivateKey(credentialsId: 'sourceforge_ssh', keyFileVariable: 'sourceForgeKey', passphraseVariable: '', usernameVariable: 'sourceForgeUser')]) {
          sshPut remote: [allowAnyHosts: true, name: 'SourceForge', host: 'web.sourceforge.net', identityFile: sourceForgeKey, user: sourceForgeUser], from: "homepage/index-new.html", into: '/home/project-web/molsketch/htdocs/index.html'
        }
      }
    }
  }
}
